// mixin to activate flexiness
@mixin flex-dat-display() {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flex;
  display: flex;
}


// sets the vertical and horizontal alignments of the flex-children
@mixin flex-dat-position($fd-position) {
  @if ($fd-position == 'center' or $fd-position == 'middle' or $fd-position == '') {
    @include flex-dat-center('fdpos');
  }
  @else {
    $position: fd-position($fd-position);
    $justify: nth($position, 2);
    $align: nth($position, 1);

    -webkit-box-pack: flex2oldstyle($justify);
    -ms-flex-pack: flex2oldstyle($justify);
    -webkit-justify-content: $justify;
    justify-content: $justify;

    -webkit-box-align: flex2oldstyle($align);
    -ms-flex-align: flex2oldstyle($align);
    -webkit-align-items: $align;
    align-items: $align;
  }
}



// sets the flex-direction and flex-wrap properties
@mixin flex-dat-flow($fd-flow) {
  $flow: fd-flow($fd-flow);


  @if (map-has-key($flow, direction)) {
    $old-direction: flex-direction2oldstyle(map-get($flow, direction));

    @include flex-direction(map-get($flow, direction));
  }

  @if (map-has-key($flow, wrap)) {
    @include flex-wrap(map-get($flow, wrap));
  }

  @if (length($flow) == 2) {
    -webkit-flex-flow: map-get($flow, direction) map-get($flow, wrap);
    -ms-flex-flow: map-get($flow, direction) map-get($flow, wrap);
    flex-flow: map-get($flow, direction) map-get($flow, wrap);
  }
}



// sets the `flex-direction` property
@mixin flex-direction($direction) {
  $direction: unquote($direction);
  $old-direction: flex-direction2oldstyle($direction);

  -webkit-box-direction: map-get($old-direction, direction);
  -webkit-box-orient: map-get($old-direction, orient);
  -webkit-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}



// sets the `flex-wrap` property
@mixin flex-wrap($wrap) {
  $wrap: unquote($wrap);

  -webkit-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}



// sets the `align-content` property
@mixin flex-dat-second-row($fd-second-row) {
  @if ($fd-second-row != null) {
    $second-row: fd2flex($fd-second-row);

    -ms-flex-line-pack: flex2oldstyle($second-row);
    -webkit-align-content: $second-row; // @todo double check there isn't an oldstyle webkit that should go in here
    align-content: $second-row;
  }
}



// sets the `justify-content` and `align-items` properties to center, including `display: flex` by default
// i think the `display: flex;` part isn't entirely necessary because you can just call flex-dat() for the same effect
@mixin flex-dat-center($context: 'wild') {
  @if ($context == 'wild') {
    @include flex-dat-display();
  }

  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;

  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
}
